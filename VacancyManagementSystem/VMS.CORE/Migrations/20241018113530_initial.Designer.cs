// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VMS.CORE.Concrete.EFCore.Context;

#nullable disable

namespace VMS.CORE.Migrations
{
    [DbContext(typeof(VMSDbContext))]
    [Migration("20241018113530_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VMS.ENTITY.Entities.Application.Action", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ID");

                    b.Property<string>("CVPath")
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("CV_PATH");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATED_DATE")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IS_DELETED");

                    b.Property<byte>("Percent")
                        .HasColumnType("tinyint")
                        .HasColumnName("PERCENT");

                    b.Property<short>("Point")
                        .HasColumnType("smallint")
                        .HasColumnName("POINT");

                    b.Property<string>("QuestionBankId")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("QUESTION_BANK_ID");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UPDATED_DATE");

                    b.HasKey("Id");

                    b.HasIndex("QuestionBankId");

                    b.ToTable("ACTIONS", (string)null);
                });

            modelBuilder.Entity("VMS.ENTITY.Entities.Application.ActionAnswer", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ID");

                    b.Property<string>("ActionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ACTION_ID");

                    b.Property<string>("AnswerId")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ANSWER_ID");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATED_DATE")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IS_DELETED");

                    b.Property<string>("QuestionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("QUESTION_ID");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UPDATED_DATE");

                    b.HasKey("Id");

                    b.HasIndex("ActionId");

                    b.HasIndex("AnswerId");

                    b.HasIndex("QuestionId");

                    b.ToTable("ACTION_ANSWERS", (string)null);
                });

            modelBuilder.Entity("VMS.ENTITY.Entities.Application.Answer", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ID");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATED_DATE")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<bool>("IsCorrect")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IS_CORRECT");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IS_DELETED");

                    b.Property<string>("QuestionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("QUESTION_ID");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UPDATED_DATE");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("ANSWERS", (string)null);
                });

            modelBuilder.Entity("VMS.ENTITY.Entities.Application.ApplicationInfo", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ID");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATED_DATE")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Email");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IS_DELETED");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("NAME");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("PHONE_NUMBER");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("SURNAME");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UPDATED_DATE");

                    b.HasKey("Id");

                    b.ToTable("APPLICATION_INFOS", (string)null);
                });

            modelBuilder.Entity("VMS.ENTITY.Entities.Application.Question", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ID");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATED_DATE")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IS_DELETED");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UPDATED_DATE");

                    b.Property<short>("WorkTypeId")
                        .HasColumnType("smallint")
                        .HasColumnName("WORK_TYPE_ID");

                    b.HasKey("Id");

                    b.HasIndex("WorkTypeId");

                    b.ToTable("QUESTIONS", (string)null);
                });

            modelBuilder.Entity("VMS.ENTITY.Entities.Application.QuestionBank", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ID");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATED_DATE")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IS_DELETED");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UPDATED_DATE");

                    b.HasKey("Id");

                    b.ToTable("QUESTION_BANKS", (string)null);
                });

            modelBuilder.Entity("VMS.ENTITY.Entities.Application.QuestionBankQuestion", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ID");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATED_DATE")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IS_DELETED");

                    b.Property<string>("QuestionBankId")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("QUESTION_BANK_ID");

                    b.Property<string>("QuestionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("QUESTION_ID");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UPDATED_DATE");

                    b.HasKey("Id");

                    b.HasIndex("QuestionBankId");

                    b.HasIndex("QuestionId");

                    b.ToTable("QUESTION_BANK_QUESTIONS", (string)null);
                });

            modelBuilder.Entity("VMS.ENTITY.Entities.Application.Vacancy", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ID");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATED_DATE")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("END_DATE");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("IS_ACTIVE");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IS_DELETED");

                    b.Property<byte>("QuestionCount")
                        .HasColumnType("tinyint")
                        .HasColumnName("QUESTION_COUNT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("START_DATE");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TITLE");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UPDATED_DATE");

                    b.Property<short>("WorkTypeId")
                        .HasColumnType("smallint")
                        .HasColumnName("WORK_TYPE_ID");

                    b.HasKey("Id");

                    b.HasIndex("WorkTypeId");

                    b.ToTable("VACANCIES", (string)null);
                });

            modelBuilder.Entity("VMS.ENTITY.Entities.Application.WorkType", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATED_DATE")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IS_DELETED");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NAME");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UPDATED_DATE");

                    b.HasKey("Id");

                    b.ToTable("WORK_TYPES", (string)null);
                });

            modelBuilder.Entity("VMS.ENTITY.Entities.Application.Action", b =>
                {
                    b.HasOne("VMS.ENTITY.Entities.Application.ApplicationInfo", "ApplicationInfo")
                        .WithOne("Action")
                        .HasForeignKey("VMS.ENTITY.Entities.Application.Action", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VMS.ENTITY.Entities.Application.QuestionBank", "QuestionBank")
                        .WithMany("Actions")
                        .HasForeignKey("QuestionBankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationInfo");

                    b.Navigation("QuestionBank");
                });

            modelBuilder.Entity("VMS.ENTITY.Entities.Application.ActionAnswer", b =>
                {
                    b.HasOne("VMS.ENTITY.Entities.Application.Action", "Action")
                        .WithMany("ActionAnswers")
                        .HasForeignKey("ActionId");

                    b.HasOne("VMS.ENTITY.Entities.Application.Answer", "Answer")
                        .WithMany("ActionAnswers")
                        .HasForeignKey("AnswerId");

                    b.HasOne("VMS.ENTITY.Entities.Application.Question", "Question")
                        .WithMany("ActionAnswers")
                        .HasForeignKey("QuestionId");

                    b.Navigation("Action");

                    b.Navigation("Answer");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("VMS.ENTITY.Entities.Application.Answer", b =>
                {
                    b.HasOne("VMS.ENTITY.Entities.Application.Question", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("VMS.ENTITY.Entities.Application.Question", b =>
                {
                    b.HasOne("VMS.ENTITY.Entities.Application.WorkType", "WorkType")
                        .WithMany("Questions")
                        .HasForeignKey("WorkTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkType");
                });

            modelBuilder.Entity("VMS.ENTITY.Entities.Application.QuestionBank", b =>
                {
                    b.HasOne("VMS.ENTITY.Entities.Application.Vacancy", "Vacancy")
                        .WithOne("QuestionBank")
                        .HasForeignKey("VMS.ENTITY.Entities.Application.QuestionBank", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vacancy");
                });

            modelBuilder.Entity("VMS.ENTITY.Entities.Application.QuestionBankQuestion", b =>
                {
                    b.HasOne("VMS.ENTITY.Entities.Application.QuestionBank", "QuestionBank")
                        .WithMany("QuestionBankQuestions")
                        .HasForeignKey("QuestionBankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VMS.ENTITY.Entities.Application.Question", "Question")
                        .WithMany("QuestionBankQuestions")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");

                    b.Navigation("QuestionBank");
                });

            modelBuilder.Entity("VMS.ENTITY.Entities.Application.Vacancy", b =>
                {
                    b.HasOne("VMS.ENTITY.Entities.Application.WorkType", "WorkType")
                        .WithMany("Vacancies")
                        .HasForeignKey("WorkTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkType");
                });

            modelBuilder.Entity("VMS.ENTITY.Entities.Application.Action", b =>
                {
                    b.Navigation("ActionAnswers");
                });

            modelBuilder.Entity("VMS.ENTITY.Entities.Application.Answer", b =>
                {
                    b.Navigation("ActionAnswers");
                });

            modelBuilder.Entity("VMS.ENTITY.Entities.Application.ApplicationInfo", b =>
                {
                    b.Navigation("Action")
                        .IsRequired();
                });

            modelBuilder.Entity("VMS.ENTITY.Entities.Application.Question", b =>
                {
                    b.Navigation("ActionAnswers");

                    b.Navigation("Answers");

                    b.Navigation("QuestionBankQuestions");
                });

            modelBuilder.Entity("VMS.ENTITY.Entities.Application.QuestionBank", b =>
                {
                    b.Navigation("Actions");

                    b.Navigation("QuestionBankQuestions");
                });

            modelBuilder.Entity("VMS.ENTITY.Entities.Application.Vacancy", b =>
                {
                    b.Navigation("QuestionBank")
                        .IsRequired();
                });

            modelBuilder.Entity("VMS.ENTITY.Entities.Application.WorkType", b =>
                {
                    b.Navigation("Questions");

                    b.Navigation("Vacancies");
                });
#pragma warning restore 612, 618
        }
    }
}
